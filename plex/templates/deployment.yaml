apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- with .Values.podLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- with .Values.podLabels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  strategy: {}
  template:
    metadata:
      labels:
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: {{ .Values.name }}
        ports:
        - containerPort: {{ .Values.port }}
        env:
        - name: TZ
          value: "{{ .Values.env.timezone }}"
        - name: PLEX_CLAIM
          valueFrom:
            secretKeyRef:
              name: plex-claim-secret
              key: PLEX_CLAIM
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        resources:
          requests:
            memory: "{{ .Values.requests.memory }}"
            cpu: "{{ .Values.requests.cpu }}"
          limits:
            memory: "{{ .Values.limits.memory }}"
            cpu: "{{ .Values.limits.cpu }}"
        volumeMounts:
        - name: plex-library
          mountPath: "/mnt"
        - name: plex-config
          mountPath: "/config"
          
      volumes:
      - name: plex-library
        persistentVolumeClaim:
          claimName: plex-library-nfs-pvc
      - name: plex-config
        persistentVolumeClaim:
          claimName: plex-config-nfs-pvc
status: {}